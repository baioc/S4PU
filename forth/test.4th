(S4PU TEST ROUTINE)

(
	$def	&addr		addr
	$def	NOP			8001
	$def	@			8003
	$def	!			8005
	$def	IF			8007
	$def	BRANCH		8009
	$def	EXIT		800D
	$def	DROP		800F
	$def	LIT			8011
	$def	PICK		8013
	$def	>R			8015
	$def	R>			8017
	$def	NOT			8019
	$def	OR			801B
	$def	AND			801D
	$def	XOR			801F
	$def	+			8021
	$def	-			8023
	$def	1+			8025
	$def	1-			8027
	$def	=			8029
	$def	<			802B
	$def	>			802D
	$def	0=			8035
	$def	0<			8037
	$def	0>			8039
	$def	2*			8041
	$def	2/			8043
	$def	DUP			804D
	$def	SWAP		804F
	$def	SBL			8051
	$def	SBR			8053
)

(
	$def	IOWR		91FF
	$def	IORD		91FE
)




(WORD DEFINITIONS)


OVER: (x0002)
	LIT
	1
	PICK
	EXIT
(
	8011	(x0002)
	0001	(x0003)
	8013	(x0004)
	800D	(x0005)
)

2DUP: (x0006)
	&OVER
	&OVER
	EXIT
(
	0002	(x0006)
	0002	(x0007)
	800D	(x0008)
)

2DROP: (x0009)
	DROP
	DROP
	EXIT
(
	800F	(x0009)
	800F	(x000A)
	800D	(x000B)
)

EMIT: (x000C)
	LIT
	IOWR
	@
	!
	EXIT
(
	8011	(x000C)
	91FF	(x000D)
	8003	(x000E)
	8005	(x000F)
	800D	(x0010)
)

MIN: (x0011)
	&2DUP
	>
	IF
	*
	SWAP
	*: DROP
	EXIT
(
	0006	(x0011)
	802D	(x0012)
	8007	(x0013)
	0016	(x0014)
	804F	(x0015)
	800F	(x0016)
	800D	(x0017)
)

MAX: (x0018)
	&2DUP
	<
	IF
	*
	SWAP
	*: DROP
	EXIT
(
	0006	(x0018)
	802B	(x0019)
	8007	(x001A)
	001D	(x001B)
	804F	(x001C)
	800F	(x001D)
	800D	(x001E)
)

NEGATE: (x001F)
	NOT
	1+
	EXIT
(
	8019	(x001F)
	8025	(x0020)
	800D	(x0021)
)

ABS: (x0022)
	DUP
	0<
	IF
	*
	&NEGATE
	*: EXIT
(
	804D	(x0022)
	8037	(x0023)
	8007	(x0024)
	0027	(x0025)
	001F	(x0026)
	800D	(x0027)
)

FIB: (x0028)
	DUP
	LIT
	2
	<
	IF
	**
	DROP
	LIT
	1
	BRANCH
	*
	**: DUP
	1-
	SWAP
	LIT
	2
	-
	&FIB
	SWAP
	&FIB
	+
	*: EXIT
(
	804D	(x0028)
	8011	(x0029)
	0002	(x002A)
	802B	(x002B)
	8007	(x002C)
	0033	(x002D)
	800F	(x002E)
	8011	(x002F)
	0001	(x0030)
	8009	(x0031)
	003D	(x0032)
	804D	(x0033)
	8027	(x0034)
	804F	(x0035)
	8011	(x0036)
	0002	(x0037)
	8023	(x0038)
	0028	(x0039)
	804F	(x003A)
	0028	(x003B)
	8021	(x003C)
	800D	(x003D)
)




(PROGRAM MEMORY)


BRANCH
****

***: LIT
2
LIT
5

2DUP
MIN
EMIT

2DUP
MAX
EMIT

2DUP
+
EMIT

2DUP
-
DUP
EMIT
ABS
EMIT

+
2*
2*
2*
2*
LIT
0

**: 2DUP
>
NOT
IF
*
OVER
FIB
EMIT
BRANCH
**
*: 2DROP
BRANCH
***

****:
(LOAD WORD DEFINITIONS INTO MAIN MEMORY)
BRANCH
***


(
	8009
	8029	-> 8F00
	8011
	0002
	8011
	0005
	0006
	0011
	000C
	0006
	0018
	000C
	0006
	8021
	000C
	0006
	8023
	804D
	000C
	0022
	000C
	8021
	8041
	8041
	8041
	8041
	8011
	0000
	0006
	802D
	8019
	8007
	8026
	0002
	0028
	000C
	8009
	801C
	0009
	8009
	8002
	8011
	8009
	8011
	0000
	8005
	8011
	8000
	8011
	0001
	8005
	8011
	8011
	8011
	0002
	8005
	8011
	0001
	8011
	0003
	8005
	8011
	8013
	8011
	0004
	8005
	8011
	800D
	8011
	0005
	8005
	8011
	0002
	8011
	0006
	8005
	8011
	0002
	8011
	0007
	8005
	8011
	800D
	8011
	0008
	8005
	8011
	800F
	8011
	0009
	8005
	8011
	800F
	8011
	000A
	8005
	8011
	800D
	8011
	000B
	8005
	8011
	8011
	8011
	000C
	8005
	8011
	91FF
	8011
	000D
	8005
	8011
	8003
	8011
	000E
	8005
	8011
	8005
	8011
	000F
	8005
	8011
	800D
	8011
	0010
	8005
	8011
	0006
	8011
	0011
	8005
	8011
	802D
	8011
	0012
	8005
	8011
	8007
	8011
	0013
	8005
	8011
	0016
	8011
	0014
	8005
	8011
	804F
	8011
	0015
	8005
	8011
	800F
	8011
	0016
	8005
	8011
	800D
	8011
	0017
	8005
	8011
	0006
	8011
	0018
	8005
	8011
	802B
	8011
	0019
	8005
	8011
	8007
	8011
	001A
	8005
	8011
	001D
	8011
	001B
	8005
	8011
	804F
	8011
	001C
	8005
	8011
	800F
	8011
	001D
	8005
	8011
	800D
	8011
	001E
	8005
	8011
	8019
	8011
	001F
	8005
	8011
	8025
	8011
	0020
	8005
	8011
	800D
	8011
	0021
	8005
	8011
	804D
	8011
	0022
	8005
	8011
	8037
	8011
	0023
	8005
	8011
	8007
	8011
	0024
	8005
	8011
	0027
	8011
	0025
	8005
	8011
	001F
	8011
	0026
	8005
	8011
	800D
	8011
	0027
	8005
	8011
	804D
	8011
	0028
	8005
	8011
	8011
	8011
	0029
	8005
	8011
	0002
	8011
	002A
	8005
	8011
	802B
	8011
	002B
	8005
	8011
	8007
	8011
	002C
	8005
	8011
	0033
	8011
	002D
	8005
	8011
	800F
	8011
	002E
	8005
	8011
	8011
	8011
	002F
	8005
	8011
	0001
	8011
	0030
	8005
	8011
	8009
	8011
	0031
	8005
	8011
	003D
	8011
	0032
	8005
	8011
	804D
	8011
	0033
	8005
	8011
	8027
	8011
	0034
	8005
	8011
	804F
	8011
	0035
	8005
	8011
	8011
	8011
	0036
	8005
	8011
	0002
	8011
	0037
	8005
	8011
	8023
	8011
	0038
	8005
	8011
	0028
	8011
	0039
	8005
	8011
	804F
	8011
	003A
	8005
	8011
	0028
	8011
	003B
	8005
	8011
	8021
	8011
	003C
	8005
	8011
	800D
	8011
	003D
	8005
	8009
	8002
)




(ALTERNATIVE)

(
x8000:		BRANCH		8009
x8001:		8F00		8F00
...
x8F00:		LIT			8011
x8F01:		1			0001
x8F02:		DUP			804D
x8F03:		LIT			8011
x8F04:		1			0001
x8F05:		PICK		8013
x8F06:		LIT			8011
x8F07:		1			0001
x8F08:		PICK		8013
x8F09:		+			8021
x8F0A:		BRANCH		8009
x8F0B:		8F03		8F03
)

LIT
1
DUP
** LIT 1
PICK
LIT 1
PICK
+
BRANCH
**

(
	8011	(x8F00)
	0001	(x8F01)
	804D	(x8F02)
	8011	(x8F03)
	0001	(x8F04)
	8013	(x8F05)
	8011	(x8F06)
	0001	(x8F07)
	8013	(x8F08)
	8021	(x8F09)
	8009	(x8F0A)
	8F03	(x8F0B)
)
